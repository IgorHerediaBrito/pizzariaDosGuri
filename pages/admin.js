import axios from 'axios'
import Head from 'next/head'
import Header from '../components/shared/Header'
import { useState, useEffect } from 'react'
import { Typography, Button, Stack, Card, TextField, Chip } from '@mui/material'
import Footer from '../components/shared/Footer'

const SENHA = '123456';

export default function Home() {
	const [senha, setSenha] = useState('');
	const [entrar, setEntrar] = useState(false);
	const [pizzas, setPizzas] = useState([]);

	useEffect(() => {
		const baseUrl = document.location.origin;
		axios.get(`${baseUrl}/api/pizzas`)
			.then((response) => {
				setPizzas(response.data);
			})
			.catch((error) => {
				console.log(error);
			})
	}, []);

	const atualizaStatus = (pizza, status) => {
		const baseUrl = document.location.origin;
		axios.put(`${baseUrl}/api/pizzas/${pizza.id}/${status}`)
			.then((response) => {
				const index = pizzas.findIndex((p) => p.id === pizza.id);
				const newPizzas = [...pizzas];
				newPizzas[index].status = status;
				setPizzas(newPizzas);
				console.log(response);
			})
			.catch((error) => {
				console.log(error);
			})
	}

	const getStatusLabel = (status) => {
        switch(status){
            case 'concluida':
                return 'Concluído';
            case 'cancelada':
                return 'Cancelado';
            case 'em-producao':
                return 'Em andamento';
            case 'pronta':
                return 'Aguardando retirada';
        }

        return 'Status inválido';
    }

    const getStatusColor = (status) => {
        switch(status){
            case 'concluida':
                return 'success';
            case 'cancelada':
                return 'error';
            case 'em-producao':
                return 'warning';
            case 'pronta':
                return 'info';
        }

        return 'primary';
    }

	return (
		<div>
			<Head>
				<title>Pizzaria dos guris</title>
				<meta name="description" content="Generated by Pizzaria dos guris" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<Header value="/admin" />
			<Typography align="center" variant="h3">Pedidos</Typography>

			{(senha === SENHA && entrar) && (
				<Stack direction="column" spacing={2} justifyContent="center" alignItems="center">
					{pizzas.map((pizza) => (
						<Card key={pizza.idPizzas} sx={{padding: 2, marginTop: 2, width: '40vw', 
						'@media screen and (max-width: 768px)': {
							width: '90vw'
						},
						}}>
							<Stack direction="column" spacing={2} justifyContent="center" alignItems="center">
								<Typography align="center" variant="h4">Sabores</Typography>
								<Typography align="center" variant="h5">{pizza.sabores}</Typography>
							
								<Typography align="center" variant="h4">Massa</Typography>
								<Typography align="center" variant="h5">{pizza.massa}</Typography>
			
								<Typography align="center" variant="h4">Borda</Typography>
								<Typography align="center" variant="h5">{pizza.borda}</Typography>

								<Stack direction="row" spacing={2} justifyContent="center" sx={{marginBottom: 2}}>
									<Chip label={getStatusLabel(pizza.status)} color={getStatusColor(pizza.status)} />
								</Stack>

								<Stack direction="row" justifyContent="center" sx={{ width: '100%',
									'@media screen and (max-width: 768px)': {
										flexWrap: 'wrap'
									},
								}}>
									<Button variant="contained" onClick={() => atualizaStatus(pizza, 'concluida')} sx={{
										'@media screen and (max-width: 768px)': {
											width: '100%',
											marginBottom: 1,
											marginRight: 0		
										},
										marginRight: 1
									}}>Concluido</Button>
									<Button variant="contained" onClick={() => atualizaStatus(pizza, 'pronta')} sx={{
										'@media screen and (max-width: 768px)': {
											width: '100%',
											marginBottom: 1,
											marginRight: 0		
										},
										marginRight: 1
									}}>Pronta para retirada</Button>
									<Button variant="contained" onClick={() => atualizaStatus(pizza, 'cancelada')} sx={{
										'@media screen and (max-width: 768px)': {
											width: '100%',
											marginBottom: 1
										}
									}}>Cancelar</Button>
								</Stack>
							</Stack>
						</Card>
					))}
				</Stack>
			) || (
				<Stack direction="column" spacing={2} justifyContent="center" alignItems="center">
					<Typography align="center" variant="h4">Digite a senha</Typography>
					<TextField 
						type="password" 
						value={senha} 
						onChange={(e) => {
							setSenha(e.target.value);
							setEntrar(false);
						}} 
						error={senha !== SENHA && entrar}	
						helperText={senha !== SENHA && entrar && 'Senha incorreta'}
					/>

					<Button variant="contained" onClick={() => setEntrar(true)}>Entrar</Button>
				</Stack>
			)}
			<Footer />
		</div>	
	)
}
